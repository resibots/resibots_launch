<launch>

  <!-- This launches the vrpn client to recover data from optitrack  -->
  <arg name="server" default="optitrack.loria.fr"/>
  <node pkg="vrpn_client_ros" type="vrpn_client_node" name="vrpn_client_node" output="screen">
   <rosparam subst_value="true">
      server: $(arg server)
      port: 3883

      update_frequency: 100.0
      frame_id: world

      # Use the VRPN server's time, or the client's ROS time.
      use_server_time: false
      broadcast_tf: true

      # Must either specify refresh frequency > 0.0, or a list of trackers to create
      refresh_tracker_frequency: 1.0
      #trackers:
      #- FirstTracker
      #- SecondTracker
    </rosparam>
  </node>

  <!-- This launches the odom_transform.py node in order to be able to publish odom, the robot starting position   -->

  <!-- assimilate pexod published by optitrack with the urdf base_link  -->
  <arg name="robot_name" default="pexod"/>
  <node pkg="tf" type="static_transform_publisher" name="$(arg robot_name)_base_link" args="0 0 0 0 0 0 /$(arg robot_name) /base_link 100"/>
  <param name="/odom_vrpn_transform/base_link_frame" type="str" value="$(arg robot_name)" />
  <node pkg="resibots_launch" type="odom_transform.py" name="odom_vrpn_transform" output="screen"/>

</launch>
